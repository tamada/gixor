
use builtin;
use str;

set edit:completion:arg-completer[totebag] = {|@words|
    fn spaces {|n|
        builtin:repeat $n ' ' | str:join ''
    }
    fn cand {|text desc|
        edit:complex-candidate $text &display=$text' '(spaces (- 14 (wcswidth $text)))$desc
    }
    var command = 'totebag'
    for word $words[1..-1] {
        if (str:has-prefix $word '-') {
            break
        }
        set command = $command';'$word
    }
    var completions = [
        &'totebag'= {
            cand -l 'Specify the log level'
            cand --log 'Specify the log level'
            cand -c 'Specify the configuration file'
            cand --config 'Specify the configuration file'
            cand -h 'Print help'
            cand --help 'Print help'
            cand -V 'Print version'
            cand --version 'Print version'
            cand dump 'Dump the boilerplates'
            cand entries 'List the the current entries in the .gitignore file'
            cand list 'List available boilerplates'
            cand root 'Show the root directory of the boilerplate'
            cand search 'Search the boilerplates from the query'
            cand update 'Update the gitignore boilerplate repositories (alias of `repository update`)'
            cand repository 'Manage the gitignore boilerplate repositories'
            cand generate-completion-files 'Generate the completion files'
            cand help 'Print this message or the help of the given subcommand(s)'
        }
        &'totebag;dump'= {
            cand -d 'Specify the destination directory. "-" means stdout.'
            cand --dest 'Specify the destination directory. "-" means stdout.'
            cand -c 'Clear the current content of gitignore'
            cand --clean 'Clear the current content of gitignore'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;entries'= {
            cand -d 'Specify the directory located the .gitignore file'
            cand --dir 'Specify the directory located the .gitignore file'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;list'= {
            cand -H 'Show header'
            cand --header 'Show header'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;root'= {
            cand -o 'Open the folder in the GUI file manager'
            cand --open 'Open the folder in the GUI file manager'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;search'= {
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;update'= {
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;repository'= {
            cand -h 'Print help'
            cand --help 'Print help'
            cand add 'Add a new gitignore boilerplate repository'
            cand list 'List the current gitignore boilerplate repositories'
            cand remove 'Remove a gitignore boilerplate repository'
            cand update 'Update a gitignore boilerplate repository'
            cand help 'Print this message or the help of the given subcommand(s)'
        }
        &'totebag;repository;add'= {
            cand -n 'Specify the name of the gitignore boilerplate repository'
            cand --name 'Specify the name of the gitignore boilerplate repository'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;repository;list'= {
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;repository;remove'= {
            cand -k 'Do not remove the directory of corresponding repository'
            cand --keep-dir 'Do not remove the directory of corresponding repository'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;repository;update'= {
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;repository;help'= {
            cand add 'Add a new gitignore boilerplate repository'
            cand list 'List the current gitignore boilerplate repositories'
            cand remove 'Remove a gitignore boilerplate repository'
            cand update 'Update a gitignore boilerplate repository'
            cand help 'Print this message or the help of the given subcommand(s)'
        }
        &'totebag;repository;help;add'= {
        }
        &'totebag;repository;help;list'= {
        }
        &'totebag;repository;help;remove'= {
        }
        &'totebag;repository;help;update'= {
        }
        &'totebag;repository;help;help'= {
        }
        &'totebag;generate-completion-files'= {
            cand --completion-out-dir 'Output directory of completion files'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'totebag;help'= {
            cand dump 'Dump the boilerplates'
            cand entries 'List the the current entries in the .gitignore file'
            cand list 'List available boilerplates'
            cand root 'Show the root directory of the boilerplate'
            cand search 'Search the boilerplates from the query'
            cand update 'Update the gitignore boilerplate repositories (alias of `repository update`)'
            cand repository 'Manage the gitignore boilerplate repositories'
            cand generate-completion-files 'Generate the completion files'
            cand help 'Print this message or the help of the given subcommand(s)'
        }
        &'totebag;help;dump'= {
        }
        &'totebag;help;entries'= {
        }
        &'totebag;help;list'= {
        }
        &'totebag;help;root'= {
        }
        &'totebag;help;search'= {
        }
        &'totebag;help;update'= {
        }
        &'totebag;help;repository'= {
            cand add 'Add a new gitignore boilerplate repository'
            cand list 'List the current gitignore boilerplate repositories'
            cand remove 'Remove a gitignore boilerplate repository'
            cand update 'Update a gitignore boilerplate repository'
        }
        &'totebag;help;repository;add'= {
        }
        &'totebag;help;repository;list'= {
        }
        &'totebag;help;repository;remove'= {
        }
        &'totebag;help;repository;update'= {
        }
        &'totebag;help;generate-completion-files'= {
        }
        &'totebag;help;help'= {
        }
    ]
    $completions[$command]
}
