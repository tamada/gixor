
using namespace System.Management.Automation
using namespace System.Management.Automation.Language

Register-ArgumentCompleter -Native -CommandName 'gixor' -ScriptBlock {
    param($wordToComplete, $commandAst, $cursorPosition)

    $commandElements = $commandAst.CommandElements
    $command = @(
        'gixor'
        for ($i = 1; $i -lt $commandElements.Count; $i++) {
            $element = $commandElements[$i]
            if ($element -isnot [StringConstantExpressionAst] -or
                $element.StringConstantType -ne [StringConstantType]::BareWord -or
                $element.Value.StartsWith('-') -or
                $element.Value -eq $wordToComplete) {
                break
        }
        $element.Value
    }) -join ';'

    $completions = @(switch ($command) {
        'gixor' {
            [CompletionResult]::new('-l', '-l', [CompletionResultType]::ParameterName, 'Specify the log level')
            [CompletionResult]::new('--log', '--log', [CompletionResultType]::ParameterName, 'Specify the log level')
            [CompletionResult]::new('-c', '-c', [CompletionResultType]::ParameterName, 'Specify the configuration file')
            [CompletionResult]::new('--config', '--config', [CompletionResultType]::ParameterName, 'Specify the configuration file')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('-V', '-V ', [CompletionResultType]::ParameterName, 'Print version')
            [CompletionResult]::new('--version', '--version', [CompletionResultType]::ParameterName, 'Print version')
            [CompletionResult]::new('dump', 'dump', [CompletionResultType]::ParameterValue, 'Dump the boilerplates')
            [CompletionResult]::new('entries', 'entries', [CompletionResultType]::ParameterValue, 'List the the current entries in the .gitignore file')
            [CompletionResult]::new('init', 'init', [CompletionResultType]::ParameterValue, 'Initialize the Gixor')
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'List available boilerplates')
            [CompletionResult]::new('root', 'root', [CompletionResultType]::ParameterValue, 'Show the root directory of the boilerplate')
            [CompletionResult]::new('search', 'search', [CompletionResultType]::ParameterValue, 'Search the boilerplates from the query')
            [CompletionResult]::new('update', 'update', [CompletionResultType]::ParameterValue, 'Update the gitignore boilerplate repositories (alias of `repository update`)')
            [CompletionResult]::new('repository', 'repository', [CompletionResultType]::ParameterValue, 'Manage the gitignore boilerplate repositories')
            [CompletionResult]::new('generate-completion-files', 'generate-completion-files', [CompletionResultType]::ParameterValue, 'Generate the completion files')
            [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Print this message or the help of the given subcommand(s)')
            break
        }
        'gixor;dump' {
            [CompletionResult]::new('-d', '-d', [CompletionResultType]::ParameterName, 'Specify the destination directory. "-" means stdout.')
            [CompletionResult]::new('--dest', '--dest', [CompletionResultType]::ParameterName, 'Specify the destination directory. "-" means stdout.')
            [CompletionResult]::new('-c', '-c', [CompletionResultType]::ParameterName, 'Clear the current content of gitignore')
            [CompletionResult]::new('--clean', '--clean', [CompletionResultType]::ParameterName, 'Clear the current content of gitignore')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;entries' {
            [CompletionResult]::new('-d', '-d', [CompletionResultType]::ParameterName, 'Specify the directory located the .gitignore file')
            [CompletionResult]::new('--dir', '--dir', [CompletionResultType]::ParameterName, 'Specify the directory located the .gitignore file')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;init' {
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;list' {
            [CompletionResult]::new('-H', '-H ', [CompletionResultType]::ParameterName, 'Show header')
            [CompletionResult]::new('--header', '--header', [CompletionResultType]::ParameterName, 'Show header')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;root' {
            [CompletionResult]::new('-o', '-o', [CompletionResultType]::ParameterName, 'Open the folder in the GUI file manager')
            [CompletionResult]::new('--open', '--open', [CompletionResultType]::ParameterName, 'Open the folder in the GUI file manager')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;search' {
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;update' {
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;repository' {
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('add', 'add', [CompletionResultType]::ParameterValue, 'Add a new gitignore boilerplate repository')
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'List the current gitignore boilerplate repositories')
            [CompletionResult]::new('remove', 'remove', [CompletionResultType]::ParameterValue, 'Remove a gitignore boilerplate repository')
            [CompletionResult]::new('update', 'update', [CompletionResultType]::ParameterValue, 'Update a gitignore boilerplate repository')
            [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Print this message or the help of the given subcommand(s)')
            break
        }
        'gixor;repository;add' {
            [CompletionResult]::new('-n', '-n', [CompletionResultType]::ParameterName, 'Specify the name of the gitignore boilerplate repository')
            [CompletionResult]::new('--name', '--name', [CompletionResultType]::ParameterName, 'Specify the name of the gitignore boilerplate repository')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;repository;list' {
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;repository;remove' {
            [CompletionResult]::new('-k', '-k', [CompletionResultType]::ParameterName, 'Do not remove the directory of corresponding repository')
            [CompletionResult]::new('--keep-dir', '--keep-dir', [CompletionResultType]::ParameterName, 'Do not remove the directory of corresponding repository')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;repository;update' {
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;repository;help' {
            [CompletionResult]::new('add', 'add', [CompletionResultType]::ParameterValue, 'Add a new gitignore boilerplate repository')
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'List the current gitignore boilerplate repositories')
            [CompletionResult]::new('remove', 'remove', [CompletionResultType]::ParameterValue, 'Remove a gitignore boilerplate repository')
            [CompletionResult]::new('update', 'update', [CompletionResultType]::ParameterValue, 'Update a gitignore boilerplate repository')
            [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Print this message or the help of the given subcommand(s)')
            break
        }
        'gixor;repository;help;add' {
            break
        }
        'gixor;repository;help;list' {
            break
        }
        'gixor;repository;help;remove' {
            break
        }
        'gixor;repository;help;update' {
            break
        }
        'gixor;repository;help;help' {
            break
        }
        'gixor;generate-completion-files' {
            [CompletionResult]::new('--completion-out-dir', '--completion-out-dir', [CompletionResultType]::ParameterName, 'Output directory of completion files')
            [CompletionResult]::new('-h', '-h', [CompletionResultType]::ParameterName, 'Print help')
            [CompletionResult]::new('--help', '--help', [CompletionResultType]::ParameterName, 'Print help')
            break
        }
        'gixor;help' {
            [CompletionResult]::new('dump', 'dump', [CompletionResultType]::ParameterValue, 'Dump the boilerplates')
            [CompletionResult]::new('entries', 'entries', [CompletionResultType]::ParameterValue, 'List the the current entries in the .gitignore file')
            [CompletionResult]::new('init', 'init', [CompletionResultType]::ParameterValue, 'Initialize the Gixor')
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'List available boilerplates')
            [CompletionResult]::new('root', 'root', [CompletionResultType]::ParameterValue, 'Show the root directory of the boilerplate')
            [CompletionResult]::new('search', 'search', [CompletionResultType]::ParameterValue, 'Search the boilerplates from the query')
            [CompletionResult]::new('update', 'update', [CompletionResultType]::ParameterValue, 'Update the gitignore boilerplate repositories (alias of `repository update`)')
            [CompletionResult]::new('repository', 'repository', [CompletionResultType]::ParameterValue, 'Manage the gitignore boilerplate repositories')
            [CompletionResult]::new('generate-completion-files', 'generate-completion-files', [CompletionResultType]::ParameterValue, 'Generate the completion files')
            [CompletionResult]::new('help', 'help', [CompletionResultType]::ParameterValue, 'Print this message or the help of the given subcommand(s)')
            break
        }
        'gixor;help;dump' {
            break
        }
        'gixor;help;entries' {
            break
        }
        'gixor;help;init' {
            break
        }
        'gixor;help;list' {
            break
        }
        'gixor;help;root' {
            break
        }
        'gixor;help;search' {
            break
        }
        'gixor;help;update' {
            break
        }
        'gixor;help;repository' {
            [CompletionResult]::new('add', 'add', [CompletionResultType]::ParameterValue, 'Add a new gitignore boilerplate repository')
            [CompletionResult]::new('list', 'list', [CompletionResultType]::ParameterValue, 'List the current gitignore boilerplate repositories')
            [CompletionResult]::new('remove', 'remove', [CompletionResultType]::ParameterValue, 'Remove a gitignore boilerplate repository')
            [CompletionResult]::new('update', 'update', [CompletionResultType]::ParameterValue, 'Update a gitignore boilerplate repository')
            break
        }
        'gixor;help;repository;add' {
            break
        }
        'gixor;help;repository;list' {
            break
        }
        'gixor;help;repository;remove' {
            break
        }
        'gixor;help;repository;update' {
            break
        }
        'gixor;help;generate-completion-files' {
            break
        }
        'gixor;help;help' {
            break
        }
    })

    $completions.Where{ $_.CompletionText -like "$wordToComplete*" } |
        Sort-Object -Property ListItemText
}
